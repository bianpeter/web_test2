{"version":3,"sources":["components/MenuB.jsx","components/Homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","iconB","backgroundColor","color","position","top","right","margin","icon","fontSize","options","MenuB","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","MenuItem","selected","Homepage","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAOMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,QACPC,SAAU,WACVC,IAAK,IACLC,MAAO,IACPC,OAAQ,OACR,UAAW,CACTL,gBAAiB,OACjBC,MAAO,SAET,8BAA+B,IAIjCK,KAAM,CACJC,SAAU,OACV,6BAA8B,CAC5BA,SAAU,QAEZ,4BAA6B,CAC3BA,SAAU,WAOVC,EAAU,CACd,OACA,QACA,WAmDaC,MA9Cf,WACE,IAAMC,EAAUb,IAEhB,EAAgCc,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,OAGd,OACE,gCACE,cAACI,EAAA,EAAD,CAAYC,UAAWT,EAAQX,MAC7BqB,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAdc,SAACC,GACnBV,EAAYU,EAAMC,gBAShB,SAME,cAAC,IAAD,CAAiBN,UAAWT,EAAQJ,SAEtC,cAACoB,EAAA,EAAD,CACEC,GAAG,YACHd,SAAUA,EACVe,aAAW,EACXb,KAAMA,EACNc,QAASZ,EACTa,WAAY,CACVC,MAAO,CACLC,UAAWC,IACXC,MAAO,SATb,SAaG1B,EAAQ2B,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAAUC,SAAqB,UAAXF,EAAoBb,QAASN,EAAjD,SACGmB,aC3DEG,MApBf,WAEE,OACE,gCACE,gDACA,cAAC,EAAD,IACA,sBAAKpB,UAAU,QAAf,UACE,uBAAOqB,KAAK,OAAOC,YAAY,WAC/B,uBAAOD,KAAK,OAAOC,YAAY,iBAC/B,uBAAOD,KAAK,OAAOC,YAAY,sBAEjC,sBAAKtB,UAAU,WAAf,UACE,uBAAOqB,KAAK,aACZ,+DAA8B,6EAEhC,wBAAQrB,UAAU,WAAlB,2BCTSuB,MARf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.176e4941.chunk.js","sourcesContent":["import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  iconB: {\r\n    backgroundColor: \"#138073\",\r\n    color: \"white\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    margin: \"30px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"grey\",\r\n      color: \"white\"\r\n    },\r\n    \"&:media (max-width: 1100px)\": {\r\n\r\n    }\r\n  },\r\n  icon: {\r\n    fontSize: \"70px\",\r\n    \"@media (max-width: 1024px)\": {\r\n      fontSize: \"50px\",\r\n    },\r\n    \"@media (max-width: 768px)\": {\r\n      fontSize: \"40px\",\r\n    },\r\n  }\r\n\r\n});\r\n\r\n\r\nconst options = [\r\n  'Home',\r\n  'About',\r\n  'Contact',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nfunction MenuB() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton className={classes.iconB}\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MenuRoundedIcon className={classes.icon} />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n          },\r\n        }}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem selected={option === 'Pyxis'} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nexport default MenuB\r\n","import React from 'react'\r\nimport '../App.scss';\r\nimport MenuB from './MenuB';\r\n\r\nfunction Homepage() {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Jelentkezés</h1>\r\n      <MenuB />\r\n      <div className=\"input\">\r\n        <input type=\"text\" placeholder=\"Név\" ></input>\r\n        <input type=\"text\" placeholder=\"Email cím\" ></input>\r\n        <input type=\"text\" placeholder=\"Telefonszám\" />\r\n      </div>\r\n      <div className=\"checkbox\">\r\n        <input type=\"checkbox\" />\r\n        <p>Elolvastam és elfogadom az <u>Adatkezelési Tájékoztatót.</u></p>\r\n      </div>\r\n      <button className=\"send_btn\">Elküld</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import Homepage from './components/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}